name: Cypress Tests

on:
  pull_request:
    branches:
      - staging

jobs:
  cypress-run:
    runs-on: ubuntu-22.04

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔍 List Repository Files
        run: ls -al

      - name: 📄 Create `.env` File
        run: |
          echo "UPLOADTHING_SECRET=${{ secrets.UPLOADTHING_SECRET }}" >> .env
          echo "RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}" >> .env
          echo "BASE_URL_PRODUCTION=${{ secrets.BASE_URL_PRODUCTION }}" >> .env
          echo "BASE_URL_DEVELOPMENT=${{ secrets.BASE_URL_DEVELOPMENT }}" >> .env
          echo "CLERK_TESTING_TOKEN=${{ secrets.CLERK_TESTING_TOKEN }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
        shell: bash

      - name: 📦 Install pnpm
        run: npm install -g pnpm

      - name: 📦 Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: 🔍 Debug Check if `docker-compose.yaml` Exists
        run: ls -al $GITHUB_WORKSPACE/src/infra || echo "🚨 src/infra/ directory not found!"

      - name: 🐳 Start Docker Services (Without Build)
        run: |
          docker network create my_network || true
          docker compose -f $GITHUB_WORKSPACE/src/infra/docker-compose.yaml up -d
      - name: 🔍 Check Running Containers
        run: docker ps -a

      - name: 📜 Inspect PostgreSQL Logs
        run: docker logs sem-patria-local-db || true

      - name: ⏳ Wait for PostgreSQL to be Ready
        run: |
          echo "Waiting for PostgreSQL..."
          until docker exec sem-patria-local-db pg_isready -U myuser; do
            sleep 2
          done
          echo "✅ PostgreSQL is ready."

      - name: 🌱 Seed Database
        run: pnpm seed
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          DEFAULT_SEM_PATRIA_EMAIL: ${{ secrets.DEFAULT_SEM_PATRIA_EMAIL }}
          DEFAULT_SEM_PATRIA_PASSWORD: ${{ secrets.DEFAULT_SEM_PATRIA_PASSWORD }}
          DEFAULT_SEM_PATRIA_NAME: ${{ secrets.DEFAULT_SEM_PATRIA_NAME }}
          DEFAULT_SEM_PATRIA_USERNAME: ${{ secrets.DEFAULT_SEM_PATRIA_USERNAME }}
          ADMIN_SEM_PATRIA_EMAIL: ${{ secrets.ADMIN_SEM_PATRIA_EMAIL }}
          ADMIN_SEM_PATRIA_PASSWORD: ${{ secrets.ADMIN_SEM_PATRIA_PASSWORD }}
          ADMIN_SEM_PATRIA_NAME: ${{ secrets.ADMIN_SEM_PATRIA_NAME }}
          ADMIN_SEM_PATRIA_USERNAME: ${{ secrets.ADMIN_SEM_PATRIA_USERNAME }}

      - name: ⚡ Build Next.js App
        run: pnpm build

      - name: 🚀 Start Next.js Server in Docker
        run: |
          pnpm start > nextjs.log 2>&1 &

      - name: ⏳ Wait for Next.js to be Ready
        run: pnpx wait-on http://localhost:3000 --timeout 60000

      - name: 📜 Print Next.js Logs
        run: cat nextjs.log

      - name: 🧪 Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          build: pnpm build
          start: pnpm start
          wait-on: http://localhost:3000
          browser: chrome
          headless: true
