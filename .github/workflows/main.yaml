name: Cypress Tests

on:
  pull_request:
    branches:
      - staging

jobs:
  cypress-run:
    runs-on: ubuntu-22.04

    env:
      UPLOADTHING_SECRET: ${{ secrets.UPLOADTHING_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      BASE_URL_PRODUCTION: ${{ secrets.BASE_URL_PRODUCTION }}
      BASE_URL_DEVELOPMENT: ${{ secrets.BASE_URL_DEVELOPMENT }}
      CLERK_TESTING_TOKEN: ${{ secrets.CLERK_TESTING_TOKEN }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@sem-patria-local-db:5432/${POSTGRES_DB}?connect_timeout=300
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      DEFAULT_SEM_PATRIA_EMAIL: ${{ secrets.DEFAULT_SEM_PATRIA_EMAIL }}
      DEFAULT_SEM_PATRIA_PASSWORD: ${{ secrets.DEFAULT_SEM_PATRIA_PASSWORD }}
      DEFAULT_SEM_PATRIA_NAME: ${{ secrets.DEFAULT_SEM_PATRIA_NAME }}
      DEFAULT_SEM_PATRIA_USERNAME: ${{ secrets.DEFAULT_SEM_PATRIA_USERNAME }}
      ADMIN_SEM_PATRIA_EMAIL: ${{ secrets.ADMIN_SEM_PATRIA_EMAIL }}
      ADMIN_SEM_PATRIA_PASSWORD: ${{ secrets.ADMIN_SEM_PATRIA_PASSWORD }}
      ADMIN_SEM_PATRIA_NAME: ${{ secrets.ADMIN_SEM_PATRIA_NAME }}
      ADMIN_SEM_PATRIA_USERNAME: ${{ secrets.ADMIN_SEM_PATRIA_USERNAME }}

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üîç List Repository Files
        run: ls -al

      - name: üìÑ Create `.env` File
        run: |
          echo "UPLOADTHING_SECRET=$UPLOADTHING_SECRET" >> .env
          echo "RESEND_API_KEY=$RESEND_API_KEY" >> .env
          echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" >> .env
          echo "BASE_URL_PRODUCTION=$BASE_URL_PRODUCTION" >> .env
          echo "BASE_URL_DEVELOPMENT=$BASE_URL_DEVELOPMENT" >> .env
          echo "CLERK_TESTING_TOKEN=$CLERK_TESTING_TOKEN" >> .env
          echo "POSTGRES_USER=$POSTGRES_USER" >> .env
          echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env
          echo "DEFAULT_SEM_PATRIA_EMAIL=$DEFAULT_SEM_PATRIA_EMAIL" >> .env
          echo "DEFAULT_SEM_PATRIA_PASSWORD=$DEFAULT_SEM_PATRIA_PASSWORD" >> .env
          echo "DEFAULT_SEM_PATRIA_NAME=$DEFAULT_SEM_PATRIA_NAME" >> .env
          echo "DEFAULT_SEM_PATRIA_USERNAME=$DEFAULT_SEM_PATRIA_USERNAME" >> .env
          echo "ADMIN_SEM_PATRIA_EMAIL=$ADMIN_SEM_PATRIA_EMAIL" >> .env
          echo "ADMIN_SEM_PATRIA_PASSWORD=$ADMIN_SEM_PATRIA_PASSWORD" >> .env
          echo "ADMIN_SEM_PATRIA_NAME=$ADMIN_SEM_PATRIA_NAME" >> .env
          echo "ADMIN_SEM_PATRIA_USERNAME=$ADMIN_SEM_PATRIA_USERNAME" >> .env
          echo "POSTGRES_PORT=$POSTGRES_PORT" >> .env
          echo "POSTGRES_DB=$POSTGRES_DB" >> .env
          echo "DATABASE_URL=postgres://postgres:$POSTGRES_PASSWORD@sem-patria-local-db:5432/$POSTGRES_DB" >> .env
        shell: bash

      - name: üì¶ Install pnpm
        run: npm install -g pnpm

      - name: üì¶ Install Dependencies
        run: pnpm install --no-frozen-lockfile
      - name: üîç Print Current Directory
        run: pwd
      - name: üîç Debug List Files in the Current Directory
        run: ls -al

      - name: üê≥ Start Docker Services
        run: docker compose --env-file .env -f ./src/infra/docker-compose.yaml up -d

      - name: üîç Debug GitHub Actions Environment Variables
        run: |
          echo "POSTGRES_USER: $POSTGRES_USER"
          echo "POSTGRES_PASSWORD length: ${#POSTGRES_PASSWORD}"
          echo "DATABASE_URL: $DATABASE_URL"
          echo "DATABASE_URL_DOCKER: $DATABASE_URL_DOCKER"

      - name: üîç Test Connection From Inside GitHub Actions
        run: |
          pg_isready -h localhost -p 5432 -U $POSTGRES_USER -d $POSTGRES_DB

      - name: üîç Test Connection From Inside Docker
        run: |
          docker exec sem-patria-local-db pg_isready -U $POSTGRES_USER -d $POSTGRES_DB

      - name: ‚è≥ Wait for PostgreSQL to be Ready
        run: |
          for i in {1..20}; do
            if docker exec sem-patria-local-db pg_isready -U $POSTGRES_USER -d $POSTGRES_DB; then
              echo "‚úÖ PostgreSQL is ready."
              exit 0
            fi
            echo "‚è≥ Waiting for database... ($i/20)"
            sleep 5
          done
          echo "‚ùå PostgreSQL did not start in time."
          docker logs sem-patria-local-db
          exit 1

      - name: üîç Debug Prisma Connection
        run: |
          echo "Prisma is using DATABASE_URL: $DATABASE_URL"

      - name: üîÑ Apply Prisma Migrations
        run: |
          export DATABASE_URL="postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}?connect_timeout=10"
          pnpm exec prisma migrate deploy --schema=prisma/schema.prisma

      - name: üå± Seed Database
        run: |
          export DATABASE_URL="postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}?connect_timeout=10"
          pnpm seed

      - name: ‚ö° Build Next.js App
        run: |
          unset DATABASE_URL
          pnpm build
      - name: üöÄ Start Next.js Server in Docker
        run: docker compose up -d app

      - name: üîç Check Running Containers
        run: docker ps -a

      - name: üîç Show Next.js Logs
        run: docker logs sem-patria-app || true

      - name: ‚è≥ Wait Extra Time for Next.js
        run: sleep 10

      - name: ‚è≥ Wait for Next.js to be Ready
        run: pnpx wait-on http://localhost:3000 --timeout 120000

      - name: üß™ Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          build: pnpm build
          start: pnpm start
          wait-on: http://localhost:3000
          browser: chrome
          headless: true
