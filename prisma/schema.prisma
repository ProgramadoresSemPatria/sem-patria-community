generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  PerfilFechado
  PortifolioBoostProgram
  Base
  ProgramadorSemPatria
  Prime
  Builder
  Admin
}

model User {
  id         String  @id @default(uuid())
  email      String
  password   String
  name       String
  username   String
  level      String?
  role       Roles[] @default([])
  github     String?
  linkedin   String?
  instagram  String?
  followers  Int     @default(0)
  followings Int     @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Notes     Note[]
}

model Course {
  id         String   @id @default(uuid())
  name       String
  courseUrl  String
  level      String
  categoryId String
  isPaid     Boolean  @default(false)
  isPending  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  category   Category @relation("CourseToCategory", fields: [categoryId], references: [id])
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[] @relation("CourseToCategory")
}

model Note {
  id        String   @id @default(uuid())
  title     String
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Event {
  id           String   @id @default(uuid())
  title        String
  description  String
  specialGuest String?
  date         DateTime
  location     String
  externalUrl  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
