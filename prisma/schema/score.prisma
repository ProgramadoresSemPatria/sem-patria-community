model Season {
  id        String   @id @default(cuid())
  name      String // Nome da temporada (ex: "Temporada 2025 - Q1")
  initDate  DateTime
  endDate   DateTime
  isCurrent Boolean // Indica a temporada ativa
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  scores    Scoreboard[]
  histories ScoreHistory[]
}

model Scoreboard {
  id       String @id @default(cuid())
  userId   String @unique
  points   Float  @default(0)
  seasonId String

  season Season @relation(fields: [seasonId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
}

model ScoreHistory {
  id         String   @id @default(cuid())
  userId     String // Usuário que realizou a ação
  targetId   String? // Usuário que recebeu a ação (caso aplicável)
  createdAt  DateTime @default(now())
  resourceId String // O recurso que gerou os pontos
  points     Float
  multiplier Float    @default(1.0)
  seasonId   String
  isManual   Boolean  @default(false) // Se foi uma ação manual do admin
  metadata   Json? // Armazena dados extras (ex: ID do post curtido)

  season   Season        @relation(fields: [seasonId], references: [id])
  resource AwardResource @relation(fields: [resourceId], references: [id])
  user     User          @relation(fields: [userId], references: [id])
}

model AwardResource {
  id        String    @id @default(cuid())
  resource  AwardEnum @unique
  baseScore Float // Quantos pontos esse recurso gera (sem multiplicador)
  disabled  Boolean   @default(false)

  histories ScoreHistory[]
}

enum AwardEnum {
  FORUM_POST_LIKE
  FORUM_POST_COMMENT_LIKE
  COURSE_RECOMMENDATION
}
